{
	"Resources": {
		"lazoneAPIGateway": {
			"Type": "AWS::Serverless::Api",
			"Properties": {
				"Name": {
					"Fn::Sub": [
						"${ResourceName} From Stack ${AWS::StackName}",
						{
							"ResourceName": "lazoneAPIGateway"
						}
					]
				},
				"StageName": "Prod",
				"DefinitionBody": {
					"openapi": "3.0",
					"info": {},
					"paths": {
						"/": {
							"get": {
								"x-amazon-apigateway-integration": {
									"httpMethod": "POST",
									"type": "aws_proxy",
									"uri": {
										"Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${lazoneLambda.Arn}/invocations"
									}
								},
								"responses": {}
							}
						}
					}
				},
				"EndpointConfiguration": "REGIONAL",
				"TracingEnabled": true,
				"Cors": {
					"MaxAge": 5
				}
			}
		},
		"lazoneLambda": {
			"Type": "AWS::Serverless::Function",
			"Properties": {
				"CodeUri": ".",
				"Description": "",
				"MemorySize": 128,
				"Timeout": 3,
				"Handler": "lambda_function.lambda_handler",
				"Runtime": "python3.9",
				"Architectures": [
					"arm64"
				],
				"EphemeralStorage": {
					"Size": 512
				},
				"EventInvokeConfig": {
					"MaximumEventAgeInSeconds": 21600,
					"MaximumRetryAttempts": 2
				},
				"PackageType": "Zip",
				"Policies": [
					{
						"Statement": [
							{
								"Effect": "Allow",
								"Action": [
									"logs:CreateLogGroup"
								],
								"Resource": "arn:aws:logs:ap-southeast-2:339713177205:*"
							},
							{
								"Effect": "Allow",
								"Action": [
									"logs:CreateLogStream",
									"logs:PutLogEvents"
								],
								"Resource": [
									"arn:aws:logs:ap-southeast-2:339713177205:log-group:/aws/lambda/lazone:*"
								]
							},
							{
								"Sid": "GeneralReadOnlyAccess",
								"Action": [
									"application-autoscaling:DescribeScalableTargets",
									"application-autoscaling:DescribeScalingActivities",
									"application-autoscaling:DescribeScalingPolicies",
									"cloudwatch:DescribeAlarmHistory",
									"cloudwatch:DescribeAlarms",
									"cloudwatch:DescribeAlarmsForMetric",
									"cloudwatch:GetMetricStatistics",
									"cloudwatch:ListMetrics",
									"cloudwatch:GetMetricData",
									"datapipeline:DescribeObjects",
									"datapipeline:DescribePipelines",
									"datapipeline:GetPipelineDefinition",
									"datapipeline:ListPipelines",
									"datapipeline:QueryObjects",
									"dynamodb:BatchGetItem",
									"dynamodb:Describe*",
									"dynamodb:List*",
									"dynamodb:GetItem",
									"dynamodb:GetResourcePolicy",
									"dynamodb:Query",
									"dynamodb:Scan",
									"dynamodb:PartiQLSelect",
									"dax:Describe*",
									"dax:List*",
									"dax:GetItem",
									"dax:BatchGetItem",
									"dax:Query",
									"dax:Scan",
									"ec2:DescribeVpcs",
									"ec2:DescribeSubnets",
									"ec2:DescribeSecurityGroups",
									"iam:GetRole",
									"iam:ListRoles",
									"kms:DescribeKey",
									"kms:ListAliases",
									"sns:ListSubscriptionsByTopic",
									"sns:ListTopics",
									"lambda:ListFunctions",
									"lambda:ListEventSourceMappings",
									"lambda:GetFunctionConfiguration",
									"resource-groups:ListGroups",
									"resource-groups:ListGroupResources",
									"resource-groups:GetGroup",
									"resource-groups:GetGroupQuery",
									"tag:GetResources",
									"kinesis:ListStreams",
									"kinesis:DescribeStream",
									"kinesis:DescribeStreamSummary"
								],
								"Effect": "Allow",
								"Resource": "*"
							},
							{
								"Sid": "CCIAccess",
								"Action": [
									"cloudwatch:GetInsightRuleReport"
								],
								"Effect": "Allow",
								"Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
							},
							{
								"Action": [
									"dynamodb:*",
									"dax:*",
									"application-autoscaling:DeleteScalingPolicy",
									"application-autoscaling:DeregisterScalableTarget",
									"application-autoscaling:DescribeScalableTargets",
									"application-autoscaling:DescribeScalingActivities",
									"application-autoscaling:DescribeScalingPolicies",
									"application-autoscaling:PutScalingPolicy",
									"application-autoscaling:RegisterScalableTarget",
									"cloudwatch:DeleteAlarms",
									"cloudwatch:DescribeAlarmHistory",
									"cloudwatch:DescribeAlarms",
									"cloudwatch:DescribeAlarmsForMetric",
									"cloudwatch:GetMetricStatistics",
									"cloudwatch:ListMetrics",
									"cloudwatch:PutMetricAlarm",
									"cloudwatch:GetMetricData",
									"datapipeline:ActivatePipeline",
									"datapipeline:CreatePipeline",
									"datapipeline:DeletePipeline",
									"datapipeline:DescribeObjects",
									"datapipeline:DescribePipelines",
									"datapipeline:GetPipelineDefinition",
									"datapipeline:ListPipelines",
									"datapipeline:PutPipelineDefinition",
									"datapipeline:QueryObjects",
									"ec2:DescribeVpcs",
									"ec2:DescribeSubnets",
									"ec2:DescribeSecurityGroups",
									"iam:GetRole",
									"iam:ListRoles",
									"kms:DescribeKey",
									"kms:ListAliases",
									"sns:CreateTopic",
									"sns:DeleteTopic",
									"sns:ListSubscriptions",
									"sns:ListSubscriptionsByTopic",
									"sns:ListTopics",
									"sns:Subscribe",
									"sns:Unsubscribe",
									"sns:SetTopicAttributes",
									"lambda:CreateFunction",
									"lambda:ListFunctions",
									"lambda:ListEventSourceMappings",
									"lambda:CreateEventSourceMapping",
									"lambda:DeleteEventSourceMapping",
									"lambda:GetFunctionConfiguration",
									"lambda:DeleteFunction",
									"resource-groups:ListGroups",
									"resource-groups:ListGroupResources",
									"resource-groups:GetGroup",
									"resource-groups:GetGroupQuery",
									"resource-groups:DeleteGroup",
									"resource-groups:CreateGroup",
									"tag:GetResources",
									"kinesis:ListStreams",
									"kinesis:DescribeStream",
									"kinesis:DescribeStreamSummary"
								],
								"Effect": "Allow",
								"Resource": "*"
							},
							{
								"Action": [
									"cloudwatch:GetInsightRuleReport"
								],
								"Effect": "Allow",
								"Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
							},
							{
								"Action": [
									"iam:PassRole"
								],
								"Effect": "Allow",
								"Resource": "*",
								"Condition": {
									"StringLike": {
										"iam:PassedToService": [
											"application-autoscaling.amazonaws.com",
											"application-autoscaling.amazonaws.com.cn",
											"dax.amazonaws.com"
										]
									}
								}
							},
							{
								"Effect": "Allow",
								"Action": [
									"iam:CreateServiceLinkedRole"
								],
								"Resource": "*",
								"Condition": {
									"StringEquals": {
										"iam:AWSServiceName": [
											"replication.dynamodb.amazonaws.com",
											"dax.amazonaws.com",
											"dynamodb.application-autoscaling.amazonaws.com",
											"contributorinsights.dynamodb.amazonaws.com",
											"kinesisreplication.dynamodb.amazonaws.com"
										]
									}
								}
							}
						]
					},
					{
						"DynamoDBCrudPolicy": {
							"TableName": {
								"Ref": "lazoneDynamodb"
							}
						}
					}
				],
				"RecursiveLoop": "Terminate",
				"SnapStart": {
					"ApplyOn": "None"
				},
				"RuntimeManagementConfig": {
					"UpdateRuntimeOn": "Auto"
				},
				"Events": {
					"lazoneAPIGatewayGET": {
						"Type": "Api",
						"Properties": {
							"Path": "/",
							"Method": "GET",
							"RestApiId": {
								"Ref": "lazoneAPIGateway"
							}
						}
					}
				},
				"Environment": {
					"Variables": {
						"LAZONEDYNAMODB_TABLE_NAME": {
							"Ref": "lazoneDynamodb"
						},
						"LAZONEDYNAMODB_TABLE_ARN": {
							"Fn::GetAtt": [
								"lazoneDynamodb",
								"Arn"
							]
						}
					}
				}
			}
		},
		"lazoneS3": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {
					"Fn::Sub": "${AWS::StackName}-lazones3-${AWS::AccountId}"
				},
				"WebsiteConfiguration": {
					"IndexDocument": "index.html"
				}
			}
		},
		"lazoneDynamodb": {
			"Type": "AWS::DynamoDB::Table",
			"Properties": {
				"AttributeDefinitions": [
					{
						"AttributeName": "articleId",
						"AttributeType": "N"
					}
				],
				"BillingMode": "PAY_PER_REQUEST",
				"KeySchema": [
					{
						"AttributeName": "articleId",
						"KeyType": "HASH"
					}
				],
				"StreamSpecification": {
					"StreamViewType": "NEW_AND_OLD_IMAGES"
				}
			}
		}
	},
	"Transform": "AWS::Serverless-2016-10-31"
}